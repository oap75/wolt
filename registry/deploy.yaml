apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-registry
  namespace: registry
  labels:
    app: docker-registry
spec:
  replicas: 2
  template:
    metadata:
      name: docker-registry
      labels:
        app: docker-registry
    spec:
      volumes:
      - name: node
        persistentVolumeClaim:
          claimName: nfs #
      - name: config
        configMap:
          name: docker-registry
          items:
            - key: registry-config.yml
              path: config.yml
      - name: htpasswd
        secret:
          secretName: docker-registry
          items:
          - key: HTPASSWD
            path: htpasswd
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - docker-registry
            topologyKey: kubernetes.io/hostname   

      containers:
        - name: docker-registry
          image: registry:2.6.2
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP          
          resources:
              requests:
                 memory: "20Mi"
                 cpu: "5m"
              limits:
                 memory: "300Mi"
                 cpu: "50m"                
          volumeMounts:
           - name: config
             mountPath: /etc/docker/registry
             readOnly: true
           - name: htpasswd
             mountPath: /auth
             readOnly: true
           - name: node
             mountPath: /var/lib/registry
      restartPolicy: Always
  selector:
    matchLabels:
      app: docker-registry
